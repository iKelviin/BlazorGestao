@page "/Company/Add"

@rendermode InteractiveServer
@inject IJSRuntime JS
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

@inject ICepService cepService
@inject ICompanyRepository CompanyRepository

<PageTitle>Empresa - Cadastro</PageTitle>

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header aling-items-center d-flex">
                <h4 class="card-title mb-0 flex-grow-1"> Cadastrar Empresa</h4>
            </div>
            <div class="card-body">
                <EditForm Model="Company" OnValidSubmit="Submit" FormName="Register">
                    <DataAnnotationsValidator />
                    <div class="row">
                        <div class="col-xxl-3 col-md-6">
                            <div>
                                <label for="razaoInputText" class="form-label">Razão Social</label>
                                <InputText @bind-Value="Company!.LegalName" type="text" autocomplete="not" class="form-control" id="razaoInputText" />
                                <ValidationMessage For="() => Company!.LegalName" />
                            </div>
                        </div>
                        <div class="col-xxl-3 col-md-6">
                            <div>
                                <label for="nomeInputText" class="form-label">Nome Fantasia</label>
                                <InputText @bind-Value="Company!.TradeName" type="text" autocomplete="not" class="form-control" id="nomeInputText" />
                                <ValidationMessage For="() => Company!.TradeName" />
                            </div>
                        </div>
                        <div class="col-xxl-3 col-md-6">
                            <div>
                                <label for="cnpj" class="form-label">CNPJ</label>
                                <InputText @bind-Value="Company!.TaxId" type="text" autocomplete="not" class="form-control" id="cnpj" />
                                <ValidationMessage For="() => Company!.TaxId" />
                            </div>
                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-xxl-3 col-md-6">
                            <div>
                                <label for="cep" class="form-label">CEP</label>
                                <div class="input-group">
                                    <InputText @bind-Value="Company!.PostalCode" type="text" autocomplete="not" class="@(Loading ? "form-control input-border-right-none" : "form-control")" id="cep" @oninput="OnCepChange" />
                                    @if (Loading)
                                    {
                                        <span class="input-group-text input-group-text-bg-transparent">
                                            <div class="spinner-border spinner-border-sm text-primary" role="status">
                                                <span class="sr-only">Loading...</span>
                                            </div>
                                        </span>
                                    }
                                </div>
                                <ValidationMessage For="() => Company!.PostalCode" />
                            </div>
                        </div>
                        <div class="col-xxl-3 col-md-6">
                            <div>
                                <label for="estadoInputText" class="form-label">Estado</label>
                                <InputText @bind-Value="Company!.State" type="text" readonly class="form-control" id="estadoInputText" />
                                <ValidationMessage For="() => Company!.State" />
                            </div>
                        </div>
                        <div class="col-xxl-3 col-md-6">
                            <div>
                                <label for="cidadeInputText" class="form-label">Cidade</label>
                                <InputText @bind-Value="Company!.City" type="text" readonly class="form-control" id="cidadeInputText" />
                                <ValidationMessage For="() => Company!.City" />
                            </div>
                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-xxl-3 col-md-6">
                            <div>
                                <label for="bairroInputText" class="form-label">Bairro</label>
                                <InputText @bind-Value="Company!.Neighborhood" type="text" readonly class="form-control" id="bairroInputText" />
                                <ValidationMessage For="() => Company!.Neighborhood" />
                            </div>
                        </div>
                        <div class="col-xxl-3 col-md-6">
                            <div>
                                <label for="enderecoInputText" class="form-label">Endereço</label>
                                <InputText @bind-Value="Company!.Address" type="text" autocomplete="not" class="form-control" id="enderecoInputText" />
                                <ValidationMessage For="() => Company!.Address" />
                            </div>
                        </div>
                        <div class="col-xxl-3 col-md-6">
                            <div>
                                <label for="complementoInputText" class="form-label">Complemento</label>
                                <InputText @bind-Value="Company!.Complement" type="text" autocomplete="not" class="form-control" id="complementoInputText" />
                                <ValidationMessage For="() => Company!.Complement" />
                            </div>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="d-flex justify-content-between">

                            <a href="/Company/List" class="btn btn-light">Voltar</a>
                            <button type="submit" class="btn btn-primary">Salvar</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>


@code {
    [SupplyParameterFromForm]
    private Gestao.Domain.Company? Company { get; set; }
    private bool Loading { get; set; } = false;

    protected override void OnInitialized()
    {
        Company = new();
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JS.InvokeVoidAsync("CompanyMaskInit");
    }

    private async Task Submit()
    {
        Company.CreatedAt = DateTimeOffset.Now;
        Company.UserId = (await AuthenticationHelper.GetAuthenticationUserIdAsync(AuthenticationStateProvider)).Value;

        await CompanyRepository.Add(Company);
        await JS.InvokeVoidAsync("alert", "Registro salvo com sucesso!!");
        NavigationManager.NavigateTo("/Company/List");
    }

    private async Task OnCepChange(ChangeEventArgs e)
    {
        if (e.Value.ToString().Length == 10)
        {
            Loading = true;
            Company.State = string.Empty;
            Company.City = string.Empty;
            Company.Neighborhood = string.Empty;
            Company.Address = string.Empty;
            await Task.Delay(2);

            var address = await cepService.SearchByPostalCode(e.Value.ToString()!);

            if (address is null)
            {
                Loading = false;
                return;
            }

            Company.State = address.UF;
            Company.City = address.Localidade;
            Company.Neighborhood = address.Bairro;
            Company.Address = address.Logradouro;

            Loading = false;
        }
    }
}
